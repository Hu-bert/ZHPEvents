@using Microsoft.AspNetCore.Identity
@using ZHPEvents.Core.Identity

@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

@model ZHPEvents.Core.Entities.Event

@{
    ViewData["Title"] = Model.Title;
    var user = await UserManager.GetUserAsync(User);
}
@section FilterMenu {
    <span>
        &nbsp;&nbsp; &nbsp;&nbsp;
    </span>
}
<br />
<div class="container">
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">@Model.Title</h5>
            <p class="card-text"><small class="text-muted">@Model.AdditionTime.Date.ToString("dd.mm.yyyy")</small></p>
            <p class="card-text">It's a broader card with text below as a natural lead-in to extra content. This content is a little longer.</p>
        </div>
        <div class="card-footer text-muted">
            <div class="d-flex justify-content-between align-items-center">
                <div class="btn-group">
                    <a asp-action="Events" class="btn btn-pill  btn-sm btn-outline-secondary" role="button">Powrót do listy</a>
                    @if (User.IsInRole("Administrator") || User.IsInRole("Editor") || User.IsInRole("EventEditor"))
                    {
                        <a asp-controller="Events" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-pill  btn-sm btn-outline-secondary" role="button">Edytuj</a>
                    }
                    else if (user != null && user.Id == Model.AddingPerson)
                    {
                        <a asp-controller="Events" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-pill  btn-sm btn-outline-secondary" role="button">Edytuj</a>
                    }
                </div>
            </div>
        </div>
        <img class="card-img-bottom" data-src="holder.js/100px180/" alt="100%x180" data-holder-rendered="true" style="height: 180px; width: 100%; display: block;">
    </div>
</div>

<br />
@section Scripts {
    <script src="~/vendor/holder.min.js"></script>
    <script>
    </script>
}